{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Bhakta_ICA1_2-10","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNkteeDrCqHqFtV+kuOFiY3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["- Bhakta, Kishan\n","- CS 4200\n","- In class assignment No.1\n","- Date 02/10/2022"],"metadata":{"id":"hj_Y8UqsRpPg"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"80SMAx9wTzbj"},"outputs":[],"source":["# Question 1\n","\n","\n","import pandas as pd\n","import numpy as np\n","\n","pd.set_option('display.max_rows',5000)\n","\n","df = pd.DataFrame()\n","\n","cpd = range(25, 150)\n","sid = ['001','002','A02','B02','003','B03']\n","mr  = [0,1]\n","fr  = [0,1]\n","dr  = np.random.random(5000) * (5000-500)+ 500\n","\n","df['Cust per day']  = np.random.choice(cpd, 5000)\n","df['Site ID']       = np.random.choice(sid, 5000)\n","df['Merch Restock'] = np.random.choice(mr, 5000, p=[0.25,0.75]) # probability of 75 yes\n","df['Fuel Restock']  = np.random.choice(fr, 5000, p=[0.1,0.9])   # probability of 90 yes\n","df['Daily Revenue'] = np.random.choice(dr, 5000)\n","df['Daily Revenue'] = np.round(df['Daily Revenue'],2)\n","\n","df.index = np.arange(1, len(df) + 1) #start row count form 1\n","\n","print(df)"]},{"cell_type":"code","source":["# Question 2 (Sub Question 1)\n","\n","import pandas as pd\n","import numpy as np\n","\n","pd.set_option('display.max_rows',5000)\n","pd.set_option('display.width', 1000)\n","#Question 2 start\n","\n","def func(site):\n","    if site == '001' or site == 'B02':\n","        return 'Rhode Island'\n","    elif site == '002' or site =='A02':\n","        return 'Montana'\n","    else:\n","        return 'Alabama'\n","    return val\n","\n","# Question 2 end\n","\n","\n","df = pd.DataFrame()\n","\n","cpd = range(25, 150)\n","sid = ['001','002','A02','B02','003','B03']\n","mr  = [0,1]\n","fr  = [0,1]\n","dr  = np.random.random(5000) * (5000-500)+ 500\n","\n","df['Cust per day']  = np.random.choice(cpd, 5000)\n","df['Site ID']       = np.random.choice(sid, 5000)\n","df['Merch Restock'] = np.random.choice(mr, 5000, p=[0.25,0.75]) # probability of 75 yes\n","df['Fuel Restock']  = np.random.choice(fr, 5000, p=[0.1,0.9])   # probability of 90 yes\n","df['Daily Revenue'] = np.random.choice(dr, 5000)\n","df['Daily Revenue'] = np.round(df['Daily Revenue'],2)\n","\n","df['State'] = df['Site ID'].apply(func)   # Part of Question 2 changing site state per site ID\n","\n","df.index = np.arange(1, len(df) + 1) #start row count form 1\n","\n","print(df)"],"metadata":{"id":"r-F0CcWhTP6y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from pandas.core.base import DataError\n","# Question 3 (Sub Question 2 (Sub Question 1))\n","\n","import pandas as pd\n","import numpy as np\n","\n","pd.set_option('display.max_rows',5000)\n","pd.options.display.max_columns = None # Q3 need to view all the columns\n","pd.set_option('display.width', 1000)\n","\n","#Question 2 start\n","\n","def func(site):\n","    if site == '001' or site == 'B02':\n","        return 'Rhode Island'\n","    elif site == '002' or site =='A02':\n","        return 'Montana'\n","    else:\n","        return 'Alabama'\n","    return val\n","\n","# Question 2 end\n","\n","\n","df = pd.DataFrame()\n","\n","cpd = range(25, 150)\n","sid = ['001','002','A02','B02','003','B03']\n","mr  = [0,1]\n","fr  = [0,1]\n","dr  = np.random.random(5000) * (5000-500)+ 500\n","\n","df['Cust per day']  = np.random.choice(cpd, 5000)\n","df['Site ID']       = np.random.choice(sid, 5000)\n","df['Merch Restock'] = np.random.choice(mr, 5000, p=[0.25,0.75]) # probability of 75 yes\n","df['Fuel Restock']  = np.random.choice(fr, 5000, p=[0.1,0.9])   # probability of 90 yes\n","df['Daily Revenue'] = np.random.choice(dr, 5000)\n","df['Daily Revenue'] = np.round(df['Daily Revenue'],2)\n","\n","df['State']         = df['Site ID'].apply(func)   # Part of Question 2 changing site state per site ID\n","\n","# # st                  = df.groupby('State')['Daily Revenue'].sum().rename('State Total').reset_index()  # Part of Question 3\n","# df                  = df.merge(st)                                                                    # Part of Question 3\n","# df['State Mean']    = np.round(df[['Daily Revenue', 'State']].groupby('State').transform('mean'),2)   # Part of Question 3\n","df['State Mean'] = df.groupby('State')['Daily Revenue'].transform('sum')\n","\n","df.index = np.arange(1, len(df) + 1) #start row count form 1\n","\n","print(df)"],"metadata":{"id":"frZOtC3NUvAO"},"execution_count":null,"outputs":[]}]}