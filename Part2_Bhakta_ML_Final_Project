{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Part2_Bhakta_ML_Final_Project","provenance":[],"authorship_tag":"ABX9TyNDHeOBY0tbrl/FNnwRBZX+"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"I9qKGWjx5Ral"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from google.colab import files\n","files.upload()"]},{"cell_type":"markdown","source":["# Data Prep"],"metadata":{"id":"WYGoPO33-4bO"}},{"cell_type":"code","source":["df = pd.read_csv('./healthcare-dataset-stroke-data.csv')\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m-Z5iUSh5qtD","executionInfo":{"status":"ok","timestamp":1651788855163,"user_tz":300,"elapsed":139,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"0d6f8790-7a56-4f2d-cb09-1942b4685d1a"},"execution_count":129,"outputs":[{"output_type":"execute_result","data":{"text/plain":["id                     0\n","gender                 0\n","age                    0\n","hypertension           0\n","heart_disease          0\n","ever_married           0\n","work_type              0\n","Residence_type         0\n","avg_glucose_level      0\n","bmi                  201\n","smoking_status         0\n","stroke                 0\n","dtype: int64"]},"metadata":{},"execution_count":129}]},{"cell_type":"code","source":["df['bmi'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lzt1rY9S8cj3","executionInfo":{"status":"ok","timestamp":1651788856501,"user_tz":300,"elapsed":4,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"709fa84b-c0cf-490c-e2bb-d0fcd7e9de00"},"execution_count":130,"outputs":[{"output_type":"execute_result","data":{"text/plain":["28.7    41\n","28.4    38\n","26.7    37\n","27.6    37\n","26.1    37\n","        ..\n","48.7     1\n","49.2     1\n","51.0     1\n","49.4     1\n","14.9     1\n","Name: bmi, Length: 418, dtype: int64"]},"metadata":{},"execution_count":130}]},{"cell_type":"code","source":["df['bmi'].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R38bNp1g8k_s","executionInfo":{"status":"ok","timestamp":1651788858084,"user_tz":300,"elapsed":146,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"a3ea7414-9306-42af-8800-c325c1cbe8ac"},"execution_count":131,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    4909.000000\n","mean       28.893237\n","std         7.854067\n","min        10.300000\n","25%        23.500000\n","50%        28.100000\n","75%        33.100000\n","max        97.600000\n","Name: bmi, dtype: float64"]},"metadata":{},"execution_count":131}]},{"cell_type":"code","source":["df['bmi'].fillna(df['bmi'].mean(),inplace=True)"],"metadata":{"id":"hFpaN3vH8oyO","executionInfo":{"status":"ok","timestamp":1651788859864,"user_tz":300,"elapsed":150,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}}},"execution_count":132,"outputs":[]},{"cell_type":"code","source":["df['bmi'].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-KT6a3Hq8uMF","executionInfo":{"status":"ok","timestamp":1651788860909,"user_tz":300,"elapsed":117,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"bd0744c8-4cab-411b-f19f-467fae5f9da0"},"execution_count":133,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    5110.000000\n","mean       28.893237\n","std         7.698018\n","min        10.300000\n","25%        23.800000\n","50%        28.400000\n","75%        32.800000\n","max        97.600000\n","Name: bmi, dtype: float64"]},"metadata":{},"execution_count":133}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"onEDkh-B80fD","executionInfo":{"status":"ok","timestamp":1651788863071,"user_tz":300,"elapsed":7,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"25e3d227-1712-4a4d-b283-1adc95710b73"},"execution_count":134,"outputs":[{"output_type":"execute_result","data":{"text/plain":["id                   0\n","gender               0\n","age                  0\n","hypertension         0\n","heart_disease        0\n","ever_married         0\n","work_type            0\n","Residence_type       0\n","avg_glucose_level    0\n","bmi                  0\n","smoking_status       0\n","stroke               0\n","dtype: int64"]},"metadata":{},"execution_count":134}]},{"cell_type":"code","source":["df.drop('id',axis=1,inplace=True)"],"metadata":{"id":"tNSOdxC784Kq","executionInfo":{"status":"ok","timestamp":1651788864827,"user_tz":300,"elapsed":141,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}}},"execution_count":135,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"rDGOxoBa9HRP","executionInfo":{"status":"ok","timestamp":1651788866220,"user_tz":300,"elapsed":122,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"7ddba547-18a1-46b4-9fbe-db9d73cec227"},"execution_count":136,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      gender   age  hypertension  heart_disease ever_married      work_type  \\\n","0       Male  67.0             0              1          Yes        Private   \n","1     Female  61.0             0              0          Yes  Self-employed   \n","2       Male  80.0             0              1          Yes        Private   \n","3     Female  49.0             0              0          Yes        Private   \n","4     Female  79.0             1              0          Yes  Self-employed   \n","...      ...   ...           ...            ...          ...            ...   \n","5105  Female  80.0             1              0          Yes        Private   \n","5106  Female  81.0             0              0          Yes  Self-employed   \n","5107  Female  35.0             0              0          Yes  Self-employed   \n","5108    Male  51.0             0              0          Yes        Private   \n","5109  Female  44.0             0              0          Yes       Govt_job   \n","\n","     Residence_type  avg_glucose_level        bmi   smoking_status  stroke  \n","0             Urban             228.69  36.600000  formerly smoked       1  \n","1             Rural             202.21  28.893237     never smoked       1  \n","2             Rural             105.92  32.500000     never smoked       1  \n","3             Urban             171.23  34.400000           smokes       1  \n","4             Rural             174.12  24.000000     never smoked       1  \n","...             ...                ...        ...              ...     ...  \n","5105          Urban              83.75  28.893237     never smoked       0  \n","5106          Urban             125.20  40.000000     never smoked       0  \n","5107          Rural              82.99  30.600000     never smoked       0  \n","5108          Rural             166.29  25.600000  formerly smoked       0  \n","5109          Urban              85.28  26.200000          Unknown       0  \n","\n","[5110 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-1887f5f7-bbca-4deb-ad3a-799ab4244781\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>Residence_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>bmi</th>\n","      <th>smoking_status</th>\n","      <th>stroke</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Male</td>\n","      <td>67.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>Urban</td>\n","      <td>228.69</td>\n","      <td>36.600000</td>\n","      <td>formerly smoked</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Female</td>\n","      <td>61.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Self-employed</td>\n","      <td>Rural</td>\n","      <td>202.21</td>\n","      <td>28.893237</td>\n","      <td>never smoked</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Male</td>\n","      <td>80.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>Rural</td>\n","      <td>105.92</td>\n","      <td>32.500000</td>\n","      <td>never smoked</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Female</td>\n","      <td>49.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>Urban</td>\n","      <td>171.23</td>\n","      <td>34.400000</td>\n","      <td>smokes</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Female</td>\n","      <td>79.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Self-employed</td>\n","      <td>Rural</td>\n","      <td>174.12</td>\n","      <td>24.000000</td>\n","      <td>never smoked</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5105</th>\n","      <td>Female</td>\n","      <td>80.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>Urban</td>\n","      <td>83.75</td>\n","      <td>28.893237</td>\n","      <td>never smoked</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5106</th>\n","      <td>Female</td>\n","      <td>81.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Self-employed</td>\n","      <td>Urban</td>\n","      <td>125.20</td>\n","      <td>40.000000</td>\n","      <td>never smoked</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5107</th>\n","      <td>Female</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Self-employed</td>\n","      <td>Rural</td>\n","      <td>82.99</td>\n","      <td>30.600000</td>\n","      <td>never smoked</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5108</th>\n","      <td>Male</td>\n","      <td>51.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>Rural</td>\n","      <td>166.29</td>\n","      <td>25.600000</td>\n","      <td>formerly smoked</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5109</th>\n","      <td>Female</td>\n","      <td>44.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Govt_job</td>\n","      <td>Urban</td>\n","      <td>85.28</td>\n","      <td>26.200000</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5110 rows × 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1887f5f7-bbca-4deb-ad3a-799ab4244781')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1887f5f7-bbca-4deb-ad3a-799ab4244781 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1887f5f7-bbca-4deb-ad3a-799ab4244781');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":136}]},{"cell_type":"markdown","source":["# Label Encoding"],"metadata":{"id":"hLAmdHVg9Nxh"}},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","\n","def label_encoded(feat):\n","  le = LabelEncoder()\n","  le.fit(feat)\n","  print(feat.name, le.classes_)\n","  return le.transform(feat)\n","\n","for col in df.columns:\n","  df[str(col)] = label_encoded(df[str(col)])\n","\n","print(df.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PWTVJphC8aid","executionInfo":{"status":"ok","timestamp":1651788868138,"user_tz":300,"elapsed":159,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"90a91943-c53b-423a-e951-1457a6abe4e1"},"execution_count":137,"outputs":[{"output_type":"stream","name":"stdout","text":["gender ['Female' 'Male' 'Other']\n","age [8.00e-02 1.60e-01 2.40e-01 3.20e-01 4.00e-01 4.80e-01 5.60e-01 6.40e-01\n"," 7.20e-01 8.00e-01 8.80e-01 1.00e+00 1.08e+00 1.16e+00 1.24e+00 1.32e+00\n"," 1.40e+00 1.48e+00 1.56e+00 1.64e+00 1.72e+00 1.80e+00 1.88e+00 2.00e+00\n"," 3.00e+00 4.00e+00 5.00e+00 6.00e+00 7.00e+00 8.00e+00 9.00e+00 1.00e+01\n"," 1.10e+01 1.20e+01 1.30e+01 1.40e+01 1.50e+01 1.60e+01 1.70e+01 1.80e+01\n"," 1.90e+01 2.00e+01 2.10e+01 2.20e+01 2.30e+01 2.40e+01 2.50e+01 2.60e+01\n"," 2.70e+01 2.80e+01 2.90e+01 3.00e+01 3.10e+01 3.20e+01 3.30e+01 3.40e+01\n"," 3.50e+01 3.60e+01 3.70e+01 3.80e+01 3.90e+01 4.00e+01 4.10e+01 4.20e+01\n"," 4.30e+01 4.40e+01 4.50e+01 4.60e+01 4.70e+01 4.80e+01 4.90e+01 5.00e+01\n"," 5.10e+01 5.20e+01 5.30e+01 5.40e+01 5.50e+01 5.60e+01 5.70e+01 5.80e+01\n"," 5.90e+01 6.00e+01 6.10e+01 6.20e+01 6.30e+01 6.40e+01 6.50e+01 6.60e+01\n"," 6.70e+01 6.80e+01 6.90e+01 7.00e+01 7.10e+01 7.20e+01 7.30e+01 7.40e+01\n"," 7.50e+01 7.60e+01 7.70e+01 7.80e+01 7.90e+01 8.00e+01 8.10e+01 8.20e+01]\n","hypertension [0 1]\n","heart_disease [0 1]\n","ever_married ['No' 'Yes']\n","work_type ['Govt_job' 'Never_worked' 'Private' 'Self-employed' 'children']\n","Residence_type ['Rural' 'Urban']\n","avg_glucose_level [ 55.12  55.22  55.23 ... 267.61 267.76 271.74]\n","bmi [10.3        11.3        11.5        12.         12.3        12.8\n"," 13.         13.2        13.3        13.4        13.5        13.7\n"," 13.8        13.9        14.         14.1        14.2        14.3\n"," 14.4        14.5        14.6        14.8        14.9        15.\n"," 15.1        15.2        15.3        15.4        15.5        15.6\n"," 15.7        15.8        15.9        16.         16.1        16.2\n"," 16.3        16.4        16.5        16.6        16.7        16.8\n"," 16.9        17.         17.1        17.2        17.3        17.4\n"," 17.5        17.6        17.7        17.8        17.9        18.\n"," 18.1        18.2        18.3        18.4        18.5        18.6\n"," 18.7        18.8        18.9        19.         19.1        19.2\n"," 19.3        19.4        19.5        19.6        19.7        19.8\n"," 19.9        20.         20.1        20.2        20.3        20.4\n"," 20.5        20.6        20.7        20.8        20.9        21.\n"," 21.1        21.2        21.3        21.4        21.5        21.6\n"," 21.7        21.8        21.9        22.         22.1        22.2\n"," 22.3        22.4        22.5        22.6        22.7        22.8\n"," 22.9        23.         23.1        23.2        23.3        23.4\n"," 23.5        23.6        23.7        23.8        23.9        24.\n"," 24.1        24.2        24.3        24.4        24.5        24.6\n"," 24.7        24.8        24.9        25.         25.1        25.2\n"," 25.3        25.4        25.5        25.6        25.7        25.8\n"," 25.9        26.         26.1        26.2        26.3        26.4\n"," 26.5        26.6        26.7        26.8        26.9        27.\n"," 27.1        27.2        27.3        27.4        27.5        27.6\n"," 27.7        27.8        27.9        28.         28.1        28.2\n"," 28.3        28.4        28.5        28.6        28.7        28.8\n"," 28.89323691 28.9        29.         29.1        29.2        29.3\n"," 29.4        29.5        29.6        29.7        29.8        29.9\n"," 30.         30.1        30.2        30.3        30.4        30.5\n"," 30.6        30.7        30.8        30.9        31.         31.1\n"," 31.2        31.3        31.4        31.5        31.6        31.7\n"," 31.8        31.9        32.         32.1        32.2        32.3\n"," 32.4        32.5        32.6        32.7        32.8        32.9\n"," 33.         33.1        33.2        33.3        33.4        33.5\n"," 33.6        33.7        33.8        33.9        34.         34.1\n"," 34.2        34.3        34.4        34.5        34.6        34.7\n"," 34.8        34.9        35.         35.1        35.2        35.3\n"," 35.4        35.5        35.6        35.7        35.8        35.9\n"," 36.         36.1        36.2        36.3        36.4        36.5\n"," 36.6        36.7        36.8        36.9        37.         37.1\n"," 37.2        37.3        37.4        37.5        37.6        37.7\n"," 37.8        37.9        38.         38.1        38.2        38.3\n"," 38.4        38.5        38.6        38.7        38.8        38.9\n"," 39.         39.1        39.2        39.3        39.4        39.5\n"," 39.6        39.7        39.8        39.9        40.         40.1\n"," 40.2        40.3        40.4        40.5        40.6        40.7\n"," 40.8        40.9        41.         41.1        41.2        41.3\n"," 41.4        41.5        41.6        41.7        41.8        41.9\n"," 42.         42.1        42.2        42.3        42.4        42.5\n"," 42.6        42.7        42.8        42.9        43.         43.1\n"," 43.2        43.3        43.4        43.6        43.7        43.8\n"," 43.9        44.         44.1        44.2        44.3        44.4\n"," 44.5        44.6        44.7        44.8        44.9        45.\n"," 45.1        45.2        45.3        45.4        45.5        45.7\n"," 45.8        45.9        46.         46.1        46.2        46.3\n"," 46.4        46.5        46.6        46.8        46.9        47.1\n"," 47.3        47.4        47.5        47.6        47.8        47.9\n"," 48.         48.1        48.2        48.3        48.4        48.5\n"," 48.7        48.8        48.9        49.2        49.3        49.4\n"," 49.5        49.8        49.9        50.1        50.2        50.3\n"," 50.4        50.5        50.6        50.8        50.9        51.\n"," 51.5        51.7        51.8        51.9        52.3        52.5\n"," 52.7        52.8        52.9        53.4        53.5        53.8\n"," 53.9        54.         54.1        54.2        54.3        54.6\n"," 54.7        54.8        55.         55.1        55.2        55.7\n"," 55.9        56.         56.1        56.6        57.2        57.3\n"," 57.5        57.7        57.9        58.1        59.7        60.2\n"," 60.9        61.2        61.6        63.3        64.4        64.8\n"," 66.8        71.9        78.         92.         97.6       ]\n","smoking_status ['Unknown' 'formerly smoked' 'never smoked' 'smokes']\n","stroke [0 1]\n","Index(['gender', 'age', 'hypertension', 'heart_disease', 'ever_married',\n","       'work_type', 'Residence_type', 'avg_glucose_level', 'bmi',\n","       'smoking_status', 'stroke'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["print('Total number of people smoking:')\n","df.agg({'smoking_status':['sum']})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":98},"id":"Xh4yFi-o58Lx","executionInfo":{"status":"ok","timestamp":1651788870754,"user_tz":300,"elapsed":159,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"7bf250a0-d5de-422d-ed7b-1825689ad6c4"},"execution_count":138,"outputs":[{"output_type":"stream","name":"stdout","text":["Total number of people smoking:\n"]},{"output_type":"execute_result","data":{"text/plain":["     smoking_status\n","sum            7036"],"text/html":["\n","  <div id=\"df-d68a1a38-cf15-4701-bb9e-e501b0ead61d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>smoking_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>sum</th>\n","      <td>7036</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d68a1a38-cf15-4701-bb9e-e501b0ead61d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d68a1a38-cf15-4701-bb9e-e501b0ead61d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d68a1a38-cf15-4701-bb9e-e501b0ead61d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":138}]},{"cell_type":"code","source":["df.agg(x=('age', max), y=('smoking_status', 'min'), z=('hypertension', np.mean))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"xL53JcZp7ciJ","executionInfo":{"status":"ok","timestamp":1651788872074,"user_tz":300,"elapsed":130,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"af8c1668-6a96-42a8-f64a-db231d2a8977"},"execution_count":139,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     age  smoking_status  hypertension\n","x  103.0             NaN           NaN\n","y    NaN             0.0           NaN\n","z    NaN             NaN      0.097456"],"text/html":["\n","  <div id=\"df-12143df3-cd2b-4a2d-ad13-af3bb4c80986\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>smoking_status</th>\n","      <th>hypertension</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>x</th>\n","      <td>103.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>y</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>z</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.097456</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-12143df3-cd2b-4a2d-ad13-af3bb4c80986')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-12143df3-cd2b-4a2d-ad13-af3bb4c80986 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-12143df3-cd2b-4a2d-ad13-af3bb4c80986');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":139}]},{"cell_type":"markdown","source":["PART 1:\n","3. We are removing ID column for the model learning. I dont know which other ones to remove.\n","4. We are label encoding the columns which contain string values or values with more than 2 types. \n","\n","# Training"],"metadata":{"id":"2b5Xwwcr5o8x"}},{"cell_type":"code","source":["x_data = df.drop('stroke',axis = 1)\n","x_data.head"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jps7PWWb5osg","executionInfo":{"status":"ok","timestamp":1651788873921,"user_tz":300,"elapsed":126,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"05b9c846-3898-4d5b-d6c6-bd8edd4b4889"},"execution_count":140,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method NDFrame.head of       gender  age  hypertension  heart_disease  ever_married  work_type  \\\n","0          1   88             0              1             1          2   \n","1          0   82             0              0             1          3   \n","2          1  101             0              1             1          2   \n","3          0   70             0              0             1          2   \n","4          0  100             1              0             1          3   \n","...      ...  ...           ...            ...           ...        ...   \n","5105       0  101             1              0             1          2   \n","5106       0  102             0              0             1          3   \n","5107       0   56             0              0             1          3   \n","5108       1   72             0              0             1          2   \n","5109       0   65             0              0             1          0   \n","\n","      Residence_type  avg_glucose_level  bmi  smoking_status  \n","0                  1               3850  240               1  \n","1                  0               3588  162               2  \n","2                  0               2483  199               2  \n","3                  1               3385  218               3  \n","4                  0               3394  113               2  \n","...              ...                ...  ...             ...  \n","5105               1               1360  162               2  \n","5106               1               3030  274               2  \n","5107               0               1314  180               2  \n","5108               0               3363  129               1  \n","5109               1               1454  135               0  \n","\n","[5110 rows x 10 columns]>"]},"metadata":{},"execution_count":140}]},{"cell_type":"code","source":["y_data = df['stroke']\n","y_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OrZnRrS35jig","executionInfo":{"status":"ok","timestamp":1651788875639,"user_tz":300,"elapsed":137,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"214941c2-01c2-4c1a-bce0-efb8344850d2"},"execution_count":141,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       1\n","1       1\n","2       1\n","3       1\n","4       1\n","       ..\n","5105    0\n","5106    0\n","5107    0\n","5108    0\n","5109    0\n","Name: stroke, Length: 5110, dtype: int64"]},"metadata":{},"execution_count":141}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, Y_train, Y_test = train_test_split(x_data, y_data, test_size =0.9, random_state=90)"],"metadata":{"id":"4I-_42FQ9vZ2","executionInfo":{"status":"ok","timestamp":1651788876924,"user_tz":300,"elapsed":151,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}}},"execution_count":142,"outputs":[]},{"cell_type":"code","source":["X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"O32VkxzF-Hl6","executionInfo":{"status":"ok","timestamp":1651788878045,"user_tz":300,"elapsed":152,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"c58ecbab-6c05-42b8-cea7-732befd7185c"},"execution_count":143,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      gender  age  hypertension  heart_disease  ever_married  work_type  \\\n","3078       0   70             0              0             1          2   \n","2020       0   43             0              0             0          2   \n","2287       0   85             1              0             1          2   \n","847        1   65             0              0             1          2   \n","1023       0   81             0              0             1          0   \n","...      ...  ...           ...            ...           ...        ...   \n","2500       0   80             0              0             1          3   \n","2727       0   86             0              0             1          3   \n","1347       1   92             0              0             1          2   \n","2717       0   26             0              0             0          4   \n","3931       0   94             1              0             0          3   \n","\n","      Residence_type  avg_glucose_level  bmi  smoking_status  \n","3078               1                468  121               1  \n","2020               0                246  201               3  \n","2287               0               2203  165               2  \n","847                1                122  117               2  \n","1023               1               1510   94               2  \n","...              ...                ...  ...             ...  \n","2500               0                 13   82               2  \n","2727               1                982  183               1  \n","1347               1               1456  150               2  \n","2717               1                892   73               0  \n","3931               0               3546  388               1  \n","\n","[511 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-1ab5d19c-7ddf-4699-b28f-951922618830\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>Residence_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>bmi</th>\n","      <th>smoking_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3078</th>\n","      <td>0</td>\n","      <td>70</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>468</td>\n","      <td>121</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2020</th>\n","      <td>0</td>\n","      <td>43</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>246</td>\n","      <td>201</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2287</th>\n","      <td>0</td>\n","      <td>85</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2203</td>\n","      <td>165</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>847</th>\n","      <td>1</td>\n","      <td>65</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>122</td>\n","      <td>117</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1023</th>\n","      <td>0</td>\n","      <td>81</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1510</td>\n","      <td>94</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2500</th>\n","      <td>0</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>82</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2727</th>\n","      <td>0</td>\n","      <td>86</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>982</td>\n","      <td>183</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1347</th>\n","      <td>1</td>\n","      <td>92</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1456</td>\n","      <td>150</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2717</th>\n","      <td>0</td>\n","      <td>26</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>892</td>\n","      <td>73</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3931</th>\n","      <td>0</td>\n","      <td>94</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>3546</td>\n","      <td>388</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>511 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ab5d19c-7ddf-4699-b28f-951922618830')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1ab5d19c-7ddf-4699-b28f-951922618830 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1ab5d19c-7ddf-4699-b28f-951922618830');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":143}]},{"cell_type":"code","source":["X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"70soWA88-KAG","executionInfo":{"status":"ok","timestamp":1651788880036,"user_tz":300,"elapsed":7,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"32ece89a-da36-4ba4-ad34-7af24e6f8c2d"},"execution_count":144,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      gender  age  hypertension  heart_disease  ever_married  work_type  \\\n","4286       1   24             0              0             0          4   \n","1020       0   41             0              0             0          2   \n","1786       0   96             0              0             1          3   \n","4276       0   50             0              0             0          3   \n","2912       0   47             0              0             0          2   \n","...      ...  ...           ...            ...           ...        ...   \n","979        1   55             0              0             0          2   \n","4897       0   98             0              0             1          3   \n","530        1   93             1              0             1          3   \n","1104       1   83             0              0             1          0   \n","325        1   97             0              0             1          2   \n","\n","      Residence_type  avg_glucose_level  bmi  smoking_status  \n","4286               0               3506  162               0  \n","1020               1               2265  141               0  \n","1786               1               1583  148               1  \n","4276               0                466   69               0  \n","2912               0               1027   74               2  \n","...              ...                ...  ...             ...  \n","979                0               1697  105               3  \n","4897               0                175   56               2  \n","530                1               2783  192               1  \n","1104               0               3609  218               0  \n","325                0               3896  217               1  \n","\n","[4599 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-20aa4a85-3758-4067-a693-3e75d3f219a4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>Residence_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>bmi</th>\n","      <th>smoking_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4286</th>\n","      <td>1</td>\n","      <td>24</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>3506</td>\n","      <td>162</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1020</th>\n","      <td>0</td>\n","      <td>41</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2265</td>\n","      <td>141</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1786</th>\n","      <td>0</td>\n","      <td>96</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1583</td>\n","      <td>148</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4276</th>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>466</td>\n","      <td>69</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2912</th>\n","      <td>0</td>\n","      <td>47</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1027</td>\n","      <td>74</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>979</th>\n","      <td>1</td>\n","      <td>55</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1697</td>\n","      <td>105</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4897</th>\n","      <td>0</td>\n","      <td>98</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>175</td>\n","      <td>56</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>530</th>\n","      <td>1</td>\n","      <td>93</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2783</td>\n","      <td>192</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1104</th>\n","      <td>1</td>\n","      <td>83</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3609</td>\n","      <td>218</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>325</th>\n","      <td>1</td>\n","      <td>97</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3896</td>\n","      <td>217</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4599 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-20aa4a85-3758-4067-a693-3e75d3f219a4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-20aa4a85-3758-4067-a693-3e75d3f219a4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-20aa4a85-3758-4067-a693-3e75d3f219a4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":144}]},{"cell_type":"code","source":["Y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nV3L-8W9-Rd1","executionInfo":{"status":"ok","timestamp":1651788881754,"user_tz":300,"elapsed":121,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"791c428d-7f78-48d1-fd47-23fae984675b"},"execution_count":145,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3078    0\n","2020    0\n","2287    0\n","847     0\n","1023    0\n","       ..\n","2500    0\n","2727    0\n","1347    0\n","2717    0\n","3931    0\n","Name: stroke, Length: 511, dtype: int64"]},"metadata":{},"execution_count":145}]},{"cell_type":"code","source":["Y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cHmjgC-w-TSG","executionInfo":{"status":"ok","timestamp":1651788883245,"user_tz":300,"elapsed":144,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"5926fa5b-1d5c-44aa-dcfc-1fca0223732f"},"execution_count":146,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4286    0\n","1020    0\n","1786    0\n","4276    0\n","2912    0\n","       ..\n","979     0\n","4897    0\n","530     0\n","1104    0\n","325     0\n","Name: stroke, Length: 4599, dtype: int64"]},"metadata":{},"execution_count":146}]},{"cell_type":"markdown","source":["# Normalize"],"metadata":{"id":"pV8rNA8x-WyD"}},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"tNxLRIPz-VKu","executionInfo":{"status":"ok","timestamp":1651788884778,"user_tz":300,"elapsed":6,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"18d5e6b4-d1c1-4e56-cf5b-b02a5a0b224e"},"execution_count":147,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            gender          age  hypertension  heart_disease  ever_married  \\\n","count  5110.000000  5110.000000   5110.000000    5110.000000   5110.000000   \n","mean      0.414286    64.006262      0.097456       0.054012      0.656164   \n","std       0.493044    23.083973      0.296607       0.226063      0.475034   \n","min       0.000000     0.000000      0.000000       0.000000      0.000000   \n","25%       0.000000    46.000000      0.000000       0.000000      0.000000   \n","50%       0.000000    66.000000      0.000000       0.000000      1.000000   \n","75%       1.000000    82.000000      0.000000       0.000000      1.000000   \n","max       2.000000   103.000000      1.000000       1.000000      1.000000   \n","\n","         work_type  Residence_type  avg_glucose_level          bmi  \\\n","count  5110.000000     5110.000000        5110.000000  5110.000000   \n","mean      2.167710        0.508023        1883.219961   161.557730   \n","std       1.090293        0.499985        1104.935189    74.002326   \n","min       0.000000        0.000000           0.000000     0.000000   \n","25%       2.000000        0.000000         969.250000   111.000000   \n","50%       2.000000        1.000000        1811.500000   157.000000   \n","75%       3.000000        1.000000        2786.000000   202.000000   \n","max       4.000000        1.000000        3978.000000   418.000000   \n","\n","       smoking_status       stroke  \n","count     5110.000000  5110.000000  \n","mean         1.376908     0.048728  \n","std          1.071534     0.215320  \n","min          0.000000     0.000000  \n","25%          0.000000     0.000000  \n","50%          2.000000     0.000000  \n","75%          2.000000     0.000000  \n","max          3.000000     1.000000  "],"text/html":["\n","  <div id=\"df-32aaa480-6497-4517-8ad8-e8f680421c41\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>Residence_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>bmi</th>\n","      <th>smoking_status</th>\n","      <th>stroke</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5110.000000</td>\n","      <td>5110.000000</td>\n","      <td>5110.000000</td>\n","      <td>5110.000000</td>\n","      <td>5110.000000</td>\n","      <td>5110.000000</td>\n","      <td>5110.000000</td>\n","      <td>5110.000000</td>\n","      <td>5110.000000</td>\n","      <td>5110.000000</td>\n","      <td>5110.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.414286</td>\n","      <td>64.006262</td>\n","      <td>0.097456</td>\n","      <td>0.054012</td>\n","      <td>0.656164</td>\n","      <td>2.167710</td>\n","      <td>0.508023</td>\n","      <td>1883.219961</td>\n","      <td>161.557730</td>\n","      <td>1.376908</td>\n","      <td>0.048728</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.493044</td>\n","      <td>23.083973</td>\n","      <td>0.296607</td>\n","      <td>0.226063</td>\n","      <td>0.475034</td>\n","      <td>1.090293</td>\n","      <td>0.499985</td>\n","      <td>1104.935189</td>\n","      <td>74.002326</td>\n","      <td>1.071534</td>\n","      <td>0.215320</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>46.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>969.250000</td>\n","      <td>111.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>66.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>1811.500000</td>\n","      <td>157.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>82.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>2786.000000</td>\n","      <td>202.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2.000000</td>\n","      <td>103.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>4.000000</td>\n","      <td>1.000000</td>\n","      <td>3978.000000</td>\n","      <td>418.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-32aaa480-6497-4517-8ad8-e8f680421c41')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-32aaa480-6497-4517-8ad8-e8f680421c41 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-32aaa480-6497-4517-8ad8-e8f680421c41');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":147}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","std = StandardScaler()\n","X_train_std = std.fit_transform(X_train)\n","X_test_std  = std.transform(X_test)"],"metadata":{"id":"zW7fBvgB-gNF","executionInfo":{"status":"ok","timestamp":1651788886378,"user_tz":300,"elapsed":132,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}}},"execution_count":148,"outputs":[]},{"cell_type":"code","source":["X_train_std"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aX0qC2AU-pG7","executionInfo":{"status":"ok","timestamp":1651788887516,"user_tz":300,"elapsed":120,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"41b1dfd7-5b51-4347-b8fd-ee4cee14cf75"},"execution_count":149,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-0.87296562,  0.29847133, -0.30695018, ..., -1.2387102 ,\n","        -0.57658081, -0.34681032],\n","       [-0.87296562, -0.93816799, -0.30695018, ..., -1.44117129,\n","         0.52588054,  1.48020073],\n","       [-0.87296562,  0.98549318,  3.25785763, ...,  0.34358704,\n","         0.02977293,  0.56669521],\n","       ...,\n","       [ 1.14552049,  1.30610337, -0.30695018, ..., -0.33766716,\n","        -0.17693857,  0.56669521],\n","       [-0.87296562, -1.71679275, -0.30695018, ..., -0.85202776,\n","        -1.23805762, -1.26031584],\n","       [-0.87296562,  1.39770629,  3.25785763, ...,  1.56838543,\n","         3.10288393, -0.34681032]])"]},"metadata":{},"execution_count":149}]},{"cell_type":"code","source":["X_test_std"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zJJylFUI-syi","executionInfo":{"status":"ok","timestamp":1651788889173,"user_tz":300,"elapsed":153,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"70f6484b-0ca9-470a-c060-ea4a1098b563"},"execution_count":150,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.14552049, -1.80839567, -0.30695018, ...,  1.53190595,\n","        -0.01156937, -1.26031584],\n","       [-0.87296562, -1.02977091, -0.30695018, ...,  0.40013023,\n","        -0.30096548, -1.26031584],\n","       [-0.87296562,  1.4893092 , -0.30695018, ..., -0.22184482,\n","        -0.20450011, -0.34681032],\n","       ...,\n","       [ 1.14552049,  1.35190483,  3.25785763, ...,  0.87253943,\n","         0.40185363, -0.34681032],\n","       [ 1.14552049,  0.89389026, -0.30695018, ...,  1.6258406 ,\n","         0.76015357, -1.26031584],\n","       [ 1.14552049,  1.53511065, -0.30695018, ...,  1.88758084,\n","         0.7463728 , -0.34681032]])"]},"metadata":{},"execution_count":150}]},{"cell_type":"markdown","source":["A random 3D plot:\n","\n","I saw plotly but couldnt forge the interactive 3D plot:"],"metadata":{"id":"UlCjVwn7DaVR"}},{"cell_type":"code","source":["xyz = df\n","fig = plt.figure()\n","\n","ax = plt.axes(projection='3d')\n","ax.scatter3D(xyz['bmi'],xyz['avg_glucose_level'],xyz['age'],c=xyz['stroke'])\n","print('X = Average Glucose Level')\n","print('y = Age')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":365},"id":"VB0PHbkxDcp2","executionInfo":{"status":"ok","timestamp":1651788891612,"user_tz":300,"elapsed":577,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"5e6f97f7-20e3-4fc4-fd44-d2c1fd480d9a"},"execution_count":151,"outputs":[{"output_type":"stream","name":"stdout","text":["X = Average Glucose Level\n","y = Age\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x396 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Models"],"metadata":{"id":"rKiU4E8B-yVK"}},{"cell_type":"code","source":["# Decision Tree Classifier\n","from sklearn.tree import DecisionTreeClassifier\n","dt = DecisionTreeClassifier()\n","dt.fit(X_train_std,Y_train)\n","dt.feature_importances_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QPDHLqW0-wpQ","executionInfo":{"status":"ok","timestamp":1651788904456,"user_tz":300,"elapsed":207,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"c67aec7b-06c3-40c2-a8b4-4affd42f97af"},"execution_count":152,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.        , 0.16950949, 0.07231387, 0.04436693, 0.        ,\n","       0.07044931, 0.05483617, 0.34890634, 0.20976263, 0.02985525])"]},"metadata":{},"execution_count":152}]},{"cell_type":"code","source":["X_train.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eZakFxCn_F5l","executionInfo":{"status":"ok","timestamp":1651788906577,"user_tz":300,"elapsed":148,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"28e3c57b-7993-441e-ecef-fd6e8f528291"},"execution_count":153,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['gender', 'age', 'hypertension', 'heart_disease', 'ever_married',\n","       'work_type', 'Residence_type', 'avg_glucose_level', 'bmi',\n","       'smoking_status'],\n","      dtype='object')"]},"metadata":{},"execution_count":153}]},{"cell_type":"code","source":["Y_pred = dt.predict(X_test_std)\n","Y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ivJrT-rg_IaB","executionInfo":{"status":"ok","timestamp":1651788907648,"user_tz":300,"elapsed":3,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"67789455-e91d-4798-93b2-047d6528bd82"},"execution_count":154,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, ..., 0, 0, 1])"]},"metadata":{},"execution_count":154}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","ac_dt = accuracy_score(Y_test,Y_pred)\n","print('Accuracy: ', ac_dt * 100,'%')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kOIvgm1U_M48","executionInfo":{"status":"ok","timestamp":1651788910313,"user_tz":300,"elapsed":251,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"71be739d-a6b1-41ef-d14e-595ef0614f8b"},"execution_count":155,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy:  89.69341161121983 %\n"]}]},{"cell_type":"code","source":["# Linear Regression -- Totaly not suitable\n","from sklearn.linear_model import LinearRegression\n","reg = LinearRegression()\n","reg.fit(x_data, y_data)\n","reg.score(X_train, Y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"20YBar1S_hEt","executionInfo":{"status":"ok","timestamp":1651788911687,"user_tz":300,"elapsed":143,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"882bdac1-1a00-405b-bcd2-330a914142ad"},"execution_count":156,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.07179061083661697"]},"metadata":{},"execution_count":156}]},{"cell_type":"code","source":["# Supervised Learning Model\n","# incomplete"],"metadata":{"id":"2_GNFyASJT1B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import Ridge\n","from yellowbrick.regressor import ResidualsPlot\n","model = Ridge()\n","visualizer = ResidualsPlot(reg)\n","\n","visualizer.fit(x_data, y_data)  # Fit the training data to the visualizer\n","visualizer.score(X_test, Y_test)  # Evaluate the model on the test data\n","visualizer.show()                 "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":462},"id":"Z_wcEpp7LOVq","executionInfo":{"status":"ok","timestamp":1651788914855,"user_tz":300,"elapsed":825,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"c8d98727-d91b-4f45-9d16-cf7f1442b866"},"execution_count":157,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:451: UserWarning:\n","\n","X does not have valid feature names, but LinearRegression was fitted with feature names\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x396 with 2 Axes>"],"image/png":"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prRp06bSKzI2b97sdT4h6jI5hSEu6fe//z179uzh22+/BWDIkCEkJSXhcDhQSvHKK6+wbds20tLSmDlzJjabDbPZTLdu3Sq0FFx77bWkpKRQUlJCSUmJ2xUETZo0cXWq3LNnD8eOHQOcP+rR0dFcffXVlJSU8MEHH2CxWFAX3EDWbrdz9913uw6EXbt2xWQyuXrmVyYuLo5mzZrx6aefAs5CJTs7mx49evz6nVYFk8nEwIEDXYVVSUkJjzzyCKdPn+bcuXM0b96cqKgocnNz+eyzzyguLvZ43TNmzGDNmjUcP34cgMGDB7u2U1ZWxtNPP82BAwfo2rUraWlpHD9+HF3XWb169SXXOXjwYL788kvXwXXDhg288cYbl9znuq5f9rPo0aMH2dnZ7NmzB4B169bRrFkz4uLiPH6vFxoyZAjffvstRqOR+Ph4t3k333wz69evJzc3F4D33nuPgQMHAnDNNdewfv16wPn5l1+90bNnT7Kysti7dy/g7Gz58MMPu33nhBBO0gIhLik8PJzp06fzzDPPsHr1au666y4yMjIYNWoUSim6devGlClTCAsLIy4ujtGjRxMUFESDBg147LHH3NY1aNAgtmzZQmJiIjExMQwcONDVg/73v/89c+bMYdu2bdxwww2u88/9+/fn3XffZejQocTGxrJgwQL27t3LzJkzXa0gQUFBjBs3ztWvwGAw8Ne//pXQ0NBLvi9N03juuedYuHAhL730EqGhofz9738nLCzMo/2yatUqPvroI9f0zTffXGmrTGUef/xxFi5cSFJSEgC33norV111FaNHj2bdunUMGzaM+Ph4HnzwQf74xz+ydOnSCq0IlYmLi2Ps2LE8++yzrFixggcffJAnnniChIQEwLkvO3bsiMlkYs6cOUyePJmYmBgmTJjABx98UOk6u3btyn333ee6giU6Oponnnjikvs8IiLisp9FWFgYL7zwAk8++SQWi4WoqCiee+65Sk9NeSIsLIyePXvSvXv3CvN69OjB9OnTmTRpErqu07lzZx5//HEAHn74YebOncvatWvp2bMnffv2BZz9X1588UWefPJJiouLCQoKYtasWVecT4i6TFNSWgtRr1x46ubw4cPcddddfPfdd7WcSggRaOQUhhD1SFlZGf3793c10X/66aeuq1yEEMIb0gIhRD2zfv16li9fjlKKJk2a8NRT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bV5eHoWFhU1+b5fLRc+ePWsdq6ysZPDgwZSXl9c6vm3bNq666qoG32vMmDEcOnSoyZ8tRDCp79pdtGgRVVVVfPbZZ7zwwguNln///ffrPZ6bm+tbPbhnz564XK4mx7R//3727NkDwNKlS9m4cWOTy4YaSSCEwLv+/IoVK1ixYgWrV68mMTHxgjefpnrmmWcaXbQnNze3WQlEfSIiIrjiiit8i4zVeO+99xg/fvyPem8hgtm51+7rr7+O1Wplzpw5jBw5khkzZjRYrri4mNWrV9d7bty4cXVWD26q9evX+/YomjZtGqNHj27R+4SCkFrKWohAGTx4MG+//Tbg/S29Zg+BxYsX89FHH7Fy5UpUVSU2Npb58+fTrl07Vq1axVtvvUVycnKtHfjGjBnDa6+9RqdOnZg/fz67d+8GYOrUqeh0OtatW8fOnTv54x//SOfOnfnTn/5EVVUVNpuNe++9l2HDhnHgwAHuu+8+zGZzgyvSjR8/nscff5ybb74ZALvdzvr16/nggw948803ef/999Hr9RiNRp555hmioqJ8ZXNzc9m0aZNvYa0pU6YwY8YMhg0bxooVK/j4449xu91ccsklzJs3r84mQUIEA6PRyIMPPshVV13FqlWr2L59O4sWLWLRokVs2bIFg8FAUlISCxcuZM6cOeTn53P//fczfvx4/va3v2E0GsnOzqaoqAiXy8U999wDwIsvvsiWLVuwWq0sXLiQHj16+K7rzp07s3XrVp599lnuv/9+Vq5cSUREBCaTiS+//JLMzExycnJ45513WL16NWazmbi4OObPn09ERASZmZlMnz6dzz//nJKSEp599tk6LYzBSloghDiP2+1m/fr1tbaA79KlC4sXL+b48eO8+OKLLF++nLfeeoshQ4bw0ksvcfr0aRYvXsyKFSt45ZVX6t1Cee3atZSWlvL3v/+dV155hXfffZcxY8bQu3dv5s6dy9ChQ3n00UeZOnUqb7zxBi+88AIPP/wwLpeLJUuWMH78eFauXNngzWXQoEHYbDby8/MB+Pe//01GRgYJCQnY7XaWLVvGypUr6dChA2vXrm1SXezcuZP169ezatUq3n77bSIjI+tsDCdEMNHr9aSnp2O1WgGoqKjw/fy++eabZGdnU1paysyZM+nRowdPPvkk4F058sknn6y35SEtLY2VK1dy44038vzzzzf42RkZGYwYMYLf/va3XHfddb7jx44d47nnnmP58uWsWLGClJQUli9fDni7H3v06MEbb7zB2LFjQ+r6khYIIYDy8nKmTJkCgMfjYdCgQdx6662+8zVLA2/fvp2SkhLfct0Oh4OOHTty6NAhOnTo4Nux8dJLL2Xfvn21PmPnzp2+1oOoqCiWLl1aJ46tW7ditVpZsmQJ4N0SuKysjPz8fKZNmwbAZZdd1uD3GD9+PO+++y4PPPAA7733Htdffz0AMTExTJs2DY1Gw9GjR5u8QdHWrVs5fPiwr1XDZrOh08ltQwS306dP+/YIio6OZsSIEUyePJns7GyuvfZakpOT63Qbdu3alZiYmHrfLysrC4CBAwfy6quvNjuevXv38rOf/cy3r8eQIUNqdZ/UXNPt27cPqTFJcicQgrP9qA3R6/UAGAwG+vXrx0svvVTr/K5du1AUxfdvj8dT5z0URan3+LkMBgPPPfccsbGxtY6rqopG420wdLvdDZb/9a9/TU5ODlOnTuW7775j1KhRFBUVsXDhQj788EPi4uJYuHBhvbGdy+l0+uIZM2YMjzzySKNxCxEsqqqq+N///sfYsWN9xxYvXsxQuCDCAAACrElEQVT333/Pf//7XyZPnsxzzz1Xp1zNNV6fmmtPVdU61wqcvV6a6vz3OXdDxFDaXUK6MIRohr59+7Jz505KSkoA+Pjjj/n0009JTU3lyJEjWCwWVFVl8+bNdcpmZGTw+eefA95my5ycHBwOB4qi+G5AmZmZfPzxx4C3VeSxxx4DvE2o3377LUC9710jISGBPn36sHDhQq677jpfC0a7du2Ii4vj1KlTfPHFFzgcjlrlIiIiKCoqAqCsrIyCggLA+xvXZ5995msOrulXFiIYOZ1O5s+fT1ZWlu+hX1hYyPLly0lLS+O2224jOzubffv2odFomjy7ouaay8vLo0ePHoD3mjl+/DgAW7Zs8b323Ou5Rnp6Onv27KGyshKATZs20b9//x/3ZYOAtEAI0QxJSUk89NBD/O53v8NsNmMymVi4cCHR0dFMnz6dm266iQ4dOtChQweqq6trlb3mmmvIy8vjhhtuwO12M3XqVAwGA1lZWcybN48HH3yQhx56iEceeYQPP/wQh8PhG0V+11138cADD7Bu3ToyMjIa7UaYMGECM2bM8G0F3Lt3bzp37syECRNITU1l1qxZPProo7V2Y8zKymLZsmVMnDiRtLQ0X5dN3759uemmm5gyZQpGo5HExETGjRvX2tUqRIvVdD+63W4sFgtZWVm+awi81+zevXuZMGEC4eHhREdHc/fdd+NwOCgrK2Pq1KlMnz69wffXarUUFBSwevVqTp48yVNPPQXAbbfdxkMPPUSXLl0YOHCg7/WXXXYZTz75ZK2WhOTkZGbPnu275pOTk7n33nv9VCOBI7txCiGEEKLZpAtDCCGEEM0mCYQQQgghmk0SCCGEEEI0myQQQgghhGg2SSCEEEII0WySQAghhBCi2SSBEEIIIUSzSQIhhBBCiGb7f7DVWxzRnrpIAAAAAElFTkSuQmCC\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc3d1e74890>"]},"metadata":{},"execution_count":157}]},{"cell_type":"markdown","source":["- Linear Regression does not work for me in this classification method.\n","- I dont even know what the output here means.\n","- I researched and found nothing. I might need to more research I guess."],"metadata":{"id":"RPG5-d8aMqsD"}},{"cell_type":"markdown","source":["# Lets do logistic regression"],"metadata":{"id":"nIS18oEHNFE7"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","lr = LogisticRegression()\n","lr.fit(X_train_std,Y_train)\n","Y_pred_lr = lr.predict(X_test_std)\n","Y_pred_lr\n","ac_lr = accuracy_score(Y_test,Y_pred_lr)\n","ac_lr"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3yPqYnvQNKI7","executionInfo":{"status":"ok","timestamp":1651788918033,"user_tz":300,"elapsed":134,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"90bc3158-7800-4920-cbaa-267bdba03e5a"},"execution_count":158,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9510763209393346"]},"metadata":{},"execution_count":158}]},{"cell_type":"markdown","source":["I tried residual plotting for logistic regression but had no data. I deleted it.\n","\n","\n","I want to try Deviance Residual Plotting but cant seem to understand it.\n"],"metadata":{"id":"_Dnf85mjOhiM"}},{"cell_type":"code","source":["fig, (axL, axR) = plt.subplots(2, figsize=(15, 15))\n","sns.regplot(model.fittedvalues, model.resid_pearson, ax= axL,\n","            color=\"black\", scatter_kws={\"s\": 5},\n","            line_kws={\"color\":\"g\", \"alpha\":1, \"lw\":2}, lowess=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"znvOsV9dO4Xl","executionInfo":{"status":"error","timestamp":1651788920575,"user_tz":300,"elapsed":578,"user":{"displayName":"knbkb7 knbkb7","userId":"14474560099246750143"}},"outputId":"0301b4e2-6d0f-4a27-ffbd-1955f9968cbe"},"execution_count":159,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-159-9e77f57687e7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0maxL\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxR\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msubplots\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m15\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m15\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m sns.regplot(model.fittedvalues, model.resid_pearson, ax= axL,\n\u001b[0m\u001b[1;32m      3\u001b[0m             \u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"black\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscatter_kws\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m\"s\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m             line_kws={\"color\":\"g\", \"alpha\":1, \"lw\":2}, lowess=True)\n","\u001b[0;31mAttributeError\u001b[0m: 'Ridge' object has no attribute 'fittedvalues'"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x1080 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Conclusion:\n","\n","\n","- LR does not seem to work for me.\n","- Decision tree has accuracy of 90% in classification method while Logistic regression has upto 95% accuracy in regression method.\n","- Regression model works for accuracy in my case as I could not complete the entire classification method."],"metadata":{"id":"_uf-Z-guPf6s"}}]}